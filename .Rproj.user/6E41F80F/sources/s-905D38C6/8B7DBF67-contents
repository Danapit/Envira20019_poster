library(readxl)
library(ggplot2)
# Multiple plot function
#
# ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)
# - cols:   Number of columns in layout
# - layout: A matrix specifying the layout. If present, 'cols' is ignored.
#
# If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),
# then plot 1 will go in the upper left, 2 will go in the upper right, and
# 3 will go all the way across the bottom.
#
#===================================

multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
  library(grid)
  
  # Make a list from the ... arguments and plotlist
  plots <- c(list(...), plotlist)
  
  numPlots = length(plots)
  
  # If layout is NULL, then use 'cols' to determine layout
  if (is.null(layout)) {
    # Make the panel
    # ncol: Number of columns of plots
    # nrow: Number of rows needed, calculated from # of cols
    layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
                     ncol = cols, nrow = ceiling(numPlots/cols))
  }
  
  if (numPlots==1) {
    print(plots[[1]])
    
  } else {
    # Set up the page
    grid.newpage()
    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
    
    # Make each plot, in the correct location
    for (i in 1:numPlots) {
      # Get the i,j matrix positions of the regions that contain this subplot
      matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
      
      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
                                      layout.pos.col = matchidx$col))
    }
  }
}

#===================================

LMS <- read_excel("C:/Users/Dana_2/Dropbox/CWC/Envira2019/POster/Spectra_R/CWC_gamma_LMS.xlsx")
#a new data frame with counts per day - transfering only those columns used later
LMS.cpd <- LMS#[-c(1:5), ] #removing the first 5 rows (if some spectra have high values in the first channels)

LMS.cpd$bkg_32268=LMS$bkg_32268/LMS$bkg_32268[1]*3600*24
LMS.cpd$spe_32269=LMS$spe_32269/LMS$spe_32269[1]*3600*24
LMS.cpd$bg140653=LMS$bg140653/LMS$bg140653[1]*3600*24
LMS.cpd$sp140865=LMS$sp140865/LMS$sp140865[1]*3600*24

#factor for normalization per keV
EcalD3 <- 1/0.2497
EcalD14bkg <- 1/0.4649
#normalizing the bkg spectra: counts per day per keV
LMS.cpd$bkg_32268norm=LMS$bkg_32268/EcalD3
LMS.cpd$bg140653norm=LMS$bg140653/EcalD14bkg

summary(LMS.cpd)

#creating a plot with 2 spectra
#1. comparison LMS to HADES bkg
p<-ggplot(LMS.cpd) + 
  geom_line(aes(x = E, y = bkg_32268norm),  color = "#99CCFF")+
  geom_line(aes(x = E2, y = bg140653norm),  color = "#666666")+
  xlim(c(30,2000))+
  xlab('E [keV]') +
  ylab('Normalized count rate [ counts / day / keV]')
  
p <- p + scale_y_log10(limits = c(0.1, 1000))+
    annotate("text",  x=150, y=400, label="LMS", size=5, colour="#99CCFF")+
    annotate("text",  x=150, y=30, label="HADES", size=5, colour="#666666")

#2. coral spectra
  q<-ggplot(LMS.cpd) +
    geom_line(aes(x = E3, y = sp140865),  color = "#660000")+
    xlim(30,400) + ylim(0, 10.5) +
    xlab('E [keV]') +
    ylab('Count rate [counts / day]')
 q <- q + 
    annotate("text",  x=46, y=2.5, label="Pb-210", size=4, colour="gold4") +
   annotate("text",  x=63, y=10, label="Th-234", size=4, colour="gold4") +
   annotate("text",  x=93, y=10.2, label="Th-234", size=4, colour="gold4") +
   annotate("text",  x=144, y=2.5, label="U-235", size=4, colour="gold4") +
    annotate("text",  x=185, y=8, label="Ra-226 + U-235", size=4, colour="gold4") +
   annotate("text",  x=242, y=2, label="Pb-214 (Ra-226)", size=4, colour="gold4") +
   annotate("text",  x=295, y=2.5, label="Pb-214 (Ra-226)", size=4, colour="gold4") +
    annotate("text",  x=352, y=3, label="Pb-214 (Ra-226)", size=4, colour="gold4") 
    
    multiplot(p, q, cols=2)
    